plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.bmuschko.docker-spring-boot-application' version '6.5.0'
    id 'groovy'
}

sourceCompatibility = JavaVersion.VERSION_11
ext.groovyVersion = "3.0.4"

dependencies{

    implementation 'org.springdoc:springdoc-openapi-ui:1.4.1'
    implementation 'org.springdoc:springdoc-openapi-groovy:1.4.1'
    implementation 'org.springdoc:springdoc-openapi-security:1.4.1'

    implementation("org.codehaus.groovy:groovy:3.0.4")
    implementation("org.codehaus.groovy:groovy-all:3.0.4")

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.google.guava:guava:30.1.1-jre'
    runtimeOnly 'mysql:mysql-connector-java'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.spockframework:spock-spring:2.0-M5-groovy-3.0')
    testImplementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7+'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

sourceSets {
    main {
        groovy {
            srcDirs = ["src/main/java"]
        }

        java {
            srcDirs = []
        }
    }

    test {
        groovy {
            srcDirs = ["src/test/java"]
        }
        java {
            srcDirs = []
        }
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    gradlePluginPortal()
}

test {
    useJUnitPlatform()
}

